# -- Username and password patterns --
api.names.pattern=[^a-zA-Z0-9]
api.password.pattern=[^a-zA-Z0-9!"ยง$%&/()=]

# -- Basic group distribution --
# The more often the group appears, the more likely the API assigns this group:
# E.g.: A,A,A,B,C --> 3:1:1 --> A: 60%, B: 20%, C: 20%
api.group.distribution=relative_leaderboard,choice,choice
# none
# choice
# relative_leaderboard
# absolute_leaderboard
# hier war vorher design_task, game_td_points
# design_task
# id_test_11
# If activated (yes), the API forces the distribution above, otherwise (no) it behaves as described above.
# New participants then get assigned to the group with the least number of participants relative to the distribution.
api.group.distribution.force=yes

# DTest
# Group offset. E.g.: A:20 gives the group 'A' an offset of '20' --> The API act as 20 of A already finished
# Is a comma separated list, i.e., A:20,B:30,C:-20 is possible
# Only used when api.group.distribution.force is activated
api.group.distribution.offsets=none:0, game_td_points:0
# -- Database connection --
# The driver the API should use to connect the data base
api.db.jdbc.driver=com.mysql.jdbc.Driver
# The database's name
api.db.name=heroku_69fa52fa9994756
  # offlinearbeiten: platform
  # onlinearbeiten: heroku_69fa52fa9994756
# The address to connect with the database
api.db.url.base= jdbc:mysql://eu-cdbr-west-02.cleardb.net/
  # offlinearbeiten: jdbc:mysql://localhost:3306/
  # onlinearbeiten: jdbc:mysql://eu-cdbr-west-02.cleardb.net/
# The database's username and password
api.db.usr.name=b97ff6b000a42f
# offlinearbeiten: root
# onlinearbeiten: b97ff6b000a42f

api.db.usr.pwd=b7760f64
  # offlinearbeiten:  17bdAg.12,nevE!
  # onlinearbeiten:   b7760f64
#fp_project

# -- WebSocket server --
# The host the WS server should get hosted
api.ws.host.name= image-tagging-backend.herokuapp.com
  # offlinearbeiten:         localhost
  # onlinearbeiten:    image-tagging-backend.herokuapp.com
# The port the WS server should get hosted
api.ws.host.port=8025
  # 8025
# The WS root path. Part of the connection URL (e.g., "ws://localhost/ws")
api.ws.host.root.path=/wss
# online : /wss
# Whether the server should be hosted with encryption (yes) or not (no)
api.ws.use.ssl=no
# The path to the (lets encrypt) certificate + its password
api.ws.ssl.pathname=
api.ws.ssl.password=

# -- Image sources --
# Path to the images. Trailing "/" is mandatory!
api.img.path=./images/
# C:/Users/Dennis/Desktop/Ba-Plattform/Plattform/images/
# Send the same image only after 600 seconds (=10 minutes)
api.img.duration=600

# -- Language settings --
# Language used to send error messages to the client. Currently either German (de) or English (en)
api.client.messages.lang=de